import{_ as t,c as i,o as a,a3 as o}from"./chunks/framework.BYhES31N.js";const s="/assets/bmi-preview.C4H92M6k.png",l="/assets/bbd-text-field-label.DIWIogWF.png",n="/assets/bbd-formulas.f1CedXgj.png",r="/assets/bbd-smoking-example.CNhv9iwJ.png",d="/assets/bbd-smoking-status.CRwFPTr3.png",h="/assets/bdd-choices-example.KnxNnH1U.png",c="/assets/bdd-dd-required.BLsmJJVk.png",p="/assets/bdd-yesno-label.DTdjTnnM.png",m="/assets/bdd-yesno-visibility.CBK83eAr.png",u="/assets/bdd-explanatory-text-visibility.CQ3BMoGQ.png",e="/assets/bdd-dd-choices.C3TP9kKO.png",g="/assets/bdd-dd-name.BVsaVACK.png",b="/assets/bdd-dd-filterxpath.BMSPwYFX.png",f="/assets/bdd-filter-preview.NuHexiVe.gif",w="/assets/bdd-checkboxes-example.D49STFf1.png",v="/assets/bdd-yesno-calculated-val.4gDloINE.png",x="/assets/bdd-checkboxes-preview.CdHeaI8L.png",y="/assets/bdd-bmi-preview-errored.By3ioQhG.png",k="/assets/bdd-blood-pressure-error.BnKqDYyb.png",_="/assets/bdd-number-field-options.9ftP2j8-.png",q="/assets/bdd-bmi-preview-2.D0KEqUTQ.png",I="/assets/bdd-highlight-grid-preview.Ba7VXULk.png",T="/assets/bdd-explanatory-text-visibility-2.D20j0st2.png",L=JSON.parse('{"title":"Rules and Logic","description":"","frontmatter":{},"headers":[],"relativePath":"user-guide/advanced/rules-and-logic.md","filePath":"user-guide/advanced/rules-and-logic.md","lastUpdated":1750244632000}'),C={name:"user-guide/advanced/rules-and-logic.md"},F=o('<h1 id="rules-and-logic" tabindex="-1">Rules and Logic <a class="header-anchor" href="#rules-and-logic" aria-label="Permalink to &quot;Rules and Logic&quot;">​</a></h1><p>The advanced features in AireForms use XPath (XML Path Language) queries.</p><p>For a quick reference list of commonly used XPath expressions in AireForms see the <a href="./../faq.html">FAQ guide</a>.</p><h2 id="calculated-value" tabindex="-1"><strong>Calculated Value</strong> <a class="header-anchor" href="#calculated-value" aria-label="Permalink to &quot;**Calculated Value**&quot;">​</a></h2><p><em>Use for: performing calculations and generating hidden or visible value outputs within your building block</em></p><p>For example:</p><p><img src="'+s+'" alt="calculated value example"></p><p>The following steps show how to create a numeric value calculation with an example using height and weight to output a BMI score. Calculated values can also be used to produce text (string) outputs, and can be developed in numerous ways depending on the complexity of the calculation to be performed.</p><ol><li>Input the required data fields to support the calculation, in this case, height and weight (number fields). In this example, further constraints should be set to assign acceptable height and weight parameters to perform the calculation. See more information about this in the <a href="#validation">validation</a> section above. The height and weight data fields should be set to metric measurements with height input in metres (m) and weight in kilograms (kg). Acceptable limits of (low and high) measurements should be set to ensure that the calculation is performed correctly.</li><li>Name the height and weight controls so that they can be easily referred to in the calculation e.g. “WeightKG” and “HeightM”. Use the <em>Control Settings</em> (cog) icon at the right hand side of each data field.</li></ol><p><img src="'+l+'" alt="text field label"></p><ol start="3"><li>Add a ‘calculated value’ data field where the value will be presented - in this case a number field called ‘calculated BMI’.</li><li>Go to the <em>Control Settings</em> (cog) icon and the <em>Formulas</em> tab. The calculation takes the form: weight divided by height squared. To input this formula in XPath it takes the form: <ul><li>$control-name div (control-name * control-name) OR</li><li>$WeightKG div (HeightM * HeightM)</li></ul></li></ol><p><img src="'+n+'" alt="calculated formulas"></p><ol start="5"><li>To make the calculation visble when a numeric value is input into both of the height and weight fields, use the following formula (as shown above) in the <em>Visibility</em> text box in the <em>Formulas</em> tab: <ul><li>$WeightKG &gt; 0 and $HeightM &gt; 0</li></ul></li></ol><p><em>For more information on visibility, <a href="#visibility">click here</a>.</em></p><h2 id="skip-logic" tabindex="-1"><strong>Skip Logic</strong> <a class="header-anchor" href="#skip-logic" aria-label="Permalink to &quot;**Skip Logic**&quot;">​</a></h2><p><em>Use for: presenting only relevant data fields to users, skip logic enables non-relevant items to be skipped within a form</em></p><p>For example:</p><p><img src="'+r+'" alt="smoking example"></p><p>The following steps show two ways to use skip logic, using both binary choice (Yes/No Answer) and select one from multiple options (Dropdown Menu) data fields.</p><ol><li>Input and label the data fields as required. This example uses: <ul><li>Dropdown Menu</li><li>Yes/No Answer</li><li>Explanatory Text. The aim is to ask only smokers if they want help to stop smoking and if they answer ‘Yes’, to provide them with more information.</li></ul></li></ol><p><img src="'+d+'" alt="smoking status"></p><ol start="2"><li>Label any required choices. You can use numeric or string (text) values. For this example, we are using numeric values. Click <em>Apply</em>.</li></ol><p><img src="'+h+'" alt="choices example"></p><ol start="3"><li>Click the <em>Control Settings</em> (cog) icon at the side of the data field to access settings. Question 1. “Do you smoke?” should be set as a required field (i.e. it must be answered).</li></ol><p><img src="'+c+'" alt="dropdown required"></p><ol start="4"><li>Label the controls for the data fields that will be used to determine if - this will make inputting the XPath expression simpler.</li></ol><p><img src="'+p+'" alt="yes/no visibility label"></p><ol start="5"><li>Next, go to the first data field that will be skipped (i.e. by those who are not smokers). Click the_Control Settings_ (cog) icon. In the <em>Formulas</em> tab input the X-Path into the <em>Visibility</em> text box in the format $control-name = true() As this is a select one from multiple data field, we can use the value that relates to being a smoker (2 = I am a smoker), as we want the next question to be visible only to smokers. The formula is: $patient-is-a-smoker = 2</li></ol><p><img src="'+m+'" alt="yes/no visibility formula"></p><ol start="6"><li>The next data field - information about how to quit smoking - is a binary response option (Yes/No Answer). If the patient responds ‘Yes’, we want them to see Here we can use the formula: $patient-wants-to-stop = true()</li></ol><p><img src="'+u+'" alt="explanatory text visibility formula"></p><ol><li><a href="./../buildingblocks/preview-building-blocks.html">Preview and test</a> the building block.</li></ol><p><em>More on Skip Logic:</em></p><ul><li><em>To create skip logic for data fields with more than one relevant response options use the OR expression. Use of the expressions is dependent on how you have labelled the response options (numeric or string). For example:</em><ol><li><em>$patient-is-a-smoker = 2 or $patient-is-a-smoker = 3</em></li><li><em>$patient-is-a-smoker = i-am-a-smoker or $patient-is-a-smoker = i-use-electronic-cigarettes</em></li></ol></li><li><em>For more complex XPath expressions, see the quick reference list in the <a href="./../faq.html">FAQ guide</a>.</em></li></ul><h2 id="filtering-drop-downs" tabindex="-1"><strong>Filtering Drop Downs</strong> <a class="header-anchor" href="#filtering-drop-downs" aria-label="Permalink to &quot;**Filtering Drop Downs**&quot;">​</a></h2><p>Values in one drop down can be used to filter the values in another dropdown.</p><ol><li>Create the first drop down and add some values to it</li></ol><p><img src="'+e+'" alt="dropdown choices"></p><ol><li>Give the dropdown a name</li></ol><p><img src="'+g+'" alt="dropdown name"></p><ol start="3"><li>Create a second dropdown and add values to it. In the filter groups column add a value from the first dropdown to have this list filtered when the first dropdown is set to that value. Multiple values can be entered separated by a space.</li></ol><p><img src="'+e+'" alt="dropdown choices"></p><ol start="4"><li>On the second dropdown under additional settings set the choice filter xpath to the name of the first dropdown.</li></ol><p><img src="'+b+'" alt="dropdown filter xpath"></p><ol start="5"><li>Preview the form and you can see that changing the first dropdown filters the results of the second dropdown ($what-do-you-drink-most-of)</li></ol><p><img src="'+f+'" alt="dropdown filter preview"></p><h2 id="evaluating-checkboxes" tabindex="-1"><strong>Evaluating Checkboxes</strong> <a class="header-anchor" href="#evaluating-checkboxes" aria-label="Permalink to &quot;**Evaluating Checkboxes**&quot;">​</a></h2><p>When using checkboxes often more than one answer will be provided meaning we need to use an XPath query to work out which options have been selected.</p><ol><li>Add a checkbox control with more than one option and a calculated value. In this example we have a selection of foods and a calculated value that determines if the selected foods contain fruits.</li></ol><p><img src="'+w+'" alt="checkboxes example"></p><ol start="2"><li>In order to determine which checkbox values have been selected we can use the XPath function <code>contains</code>, the first argument to the function is a text value we want to search and the second argument is the value we want to search for. On the formula tab of the calculated value control we can use <code>contains</code> and <code>or</code> to search for multiple values, if the value we are searching for is found then the contains function returns true.</li></ol><p><img src="'+v+'" alt="yes/no calculated value"></p><ol><li>When the user selects a value that matches one of those in our contains formula the calculated value changes to true.</li></ol><p><img src="'+x+'" alt="checkboxes preview"></p><h2 id="validation" tabindex="-1"><strong>Validation</strong> <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;**Validation**&quot;">​</a></h2><p><em>Use for: setting accepted parameters within a data field that constrain the values that users can input, by type (e.g. string, numeric etc.) and other criteria e.g length or value. These parameters mean that unacceptable values will be rejected and can be associated with error messages.</em></p><p>For example:</p><p><img src="'+y+'" alt="bmi preview error"></p><p><img src="'+k+'" alt="blood pressure preview error"></p><h3 id="validation-using-formulas" tabindex="-1"><strong>Validation using formulas</strong> <a class="header-anchor" href="#validation-using-formulas" aria-label="Permalink to &quot;**Validation using formulas**&quot;">​</a></h3><ol><li>Input the required data fields that will be constrained. In this example, these fields are height and weight.</li><li>Go to the <em>Control Settings</em> (cog) icon and the <em>Validations and Alerts</em> tab. In the second dropdown menu, ensure the correct <em>Data Type</em> is selected. In this case, the data type is ‘decimal’.</li><li>In the third dropdown menu, <em>Formula</em> is selected as the default option. Input the required formula into the text box to the right. For this example, a height will be validated if it is greater than 0m (&gt;0) and less than 2.5m (&lt;2.5).</li></ol><p><img src="'+_+'" alt="number field options"></p><p><em>Find more information about common operators on the <a href="./../faq.html">FAQ guide</a>.</em></p><p><em>Note: For numeric values, the expression =’’ (left blank) can be used to ensure that when a formula is used to set the validation rules for a data field, the field can also be valid when blank (i.e. it is optional to complete). The =’’ expression OR =’string’ can be used for non-numeric values.</em></p><h3 id="other-validation-options" tabindex="-1"><strong>Other validation options</strong> <a class="header-anchor" href="#other-validation-options" aria-label="Permalink to &quot;**Other validation options**&quot;">​</a></h3><ol><li>Go to the <em>Control Settings</em> (cog) icon and the <em>Validations and Alerts</em> tab.In the third dropdown menu, there are a range of additional validation options: <ul><li>Positive</li><li>Positive or Zero</li><li>Negative</li><li>Negative or Zero</li></ul></li><li>Use these options together with a relevant <em>Data Type</em> to create validation rules.</li></ol><h2 id="visibility" tabindex="-1"><strong>Visibility</strong> <a class="header-anchor" href="#visibility" aria-label="Permalink to &quot;**Visibility**&quot;">​</a></h2><p><em>Use for: configuring if and when a data field is visible to a form user. Visibility can be used to show information or data fields to form users, based on defined parameters.</em></p><p>In this example, the from user is shown a relevant message about BMI, based on the calculated BMI using a patient’s height and weight information.</p><p>For example:</p><p><img src="'+q+'" alt="bmi preview"></p><ol><li>Input the required data fields that will be used to set the parameters for visibility of the BMI explanatory information. In this example, these fields are: height, weight and calculated BMI. The information visbility will be based on the calculated BMI value. Use relevant value labels (e.g. calculated-bmi) to reference the relevant data fields (controls) and set parameters in formulas. <em>Note: in this example, the calculated value field also has visibiility controls applied. This creates a hierarchy within the building blocK so that height and weight have to be input to produce calculated value. The visibility of any later data fields that rely on the calculated value will have this reliance in addition to any defined controls.</em></li><li>Create an explanatory text data field for each of the BMI calculation explanations. These can be nested within separate sections if preferred, which will further emphasise the way the explanations are presented to users. <em>Note: this example uses section highlighting. You can find out more in the <a href="./../buildingblocks/edit-building-blocks.html#highlight-data-fields">highlighting</a> explanation.</em></li></ol><p><img src="'+I+'" alt="highlight grid preview"></p><ol start="3"><li>Click the <em>Control Settings</em> (cog) icon for each explanatory text field and input the relevant parameters in the <em>Visibility</em> text box in the <em>Formulas</em> tab. Formulas take the form: $control-name operator. Operators can include &gt;, &lt;, &gt;=, &lt;= etc. See more in the <a href="./../faq.html">FAQ guide</a>. In this example: <ul><li>The underweight BMI range is less than 18.5. So underweight explantory text visibility = $calculated-bmi &lt; 18.5</li><li>The healthy weight BMI range is between 18.5 and 24.9. So healthy weight explanatory text visibility = $calculated-bmi &gt;= 18.5 and $calculated-bmi &lt; 25</li><li>The overweight BMI range is between 25 and 29.9. So overweight explanatory text visbility = $calculated-bmi &gt;= 25 and $calculated-bmi &lt; 30</li><li>The obese BMI range is between 30 and 30.9. So obese explanatory text visibility = $calculated-bmi &gt; 30</li></ul></li><li></li></ol><p><img src="'+T+'" alt="explanatory text visibility"></p><p><em>Note: if using the current control value as the parameter to set visibility, a full stop (.) can be used in place of the ‘$control-name’ format.</em></p>',76),P=[F];function M($,S,V,A,B,D){return a(),i("div",null,P)}const U=t(C,[["render",M]]);export{L as __pageData,U as default};
